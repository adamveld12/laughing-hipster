# ^ <type>(optional scope): <description>
# common <type>s include: feat, bugfix, chore, ci, docs, style, perf, test, build
#                    fix: a commit of the type fix patches a bug in your codebase (this correlates with PATCH in Semantic Versioning).
#                    feat: a commit of the type feat introduces a new feature to the codebase (this correlates with MINOR in Semantic Versioning).
#
# <description>: Capitalized, short (70 chars or less) summary

# ^ [optional body]
# Write your commit message in the imperative: "Fix bug" and not "Fixed bug"
# or "Fixes bug."  This convention matches up with commit messages generated
# by commands like git merge and git revert.

# ^ [optional footer(s)]
# BREAKING CHANGE: a commit that has a footer BREAKING CHANGE:, or appends a ! after the type/scope, introduces a breaking API change (correlating with MAJOR in Semantic Versioning). 
# A BREAKING CHANGE can be part of commits of any type.
# footers other than BREAKING CHANGE: <description> may be provided and follow a convention similar to git trailer format.

# set up the linter @ https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional
# Read more @ https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html
